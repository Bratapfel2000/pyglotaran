# travis
sudo: false
language: python
cache: pip

matrix:
  fast_finish: true
  include:
    - python: 3.6
      name: flake8
      before_install:
        - echo "before_install"
        - python -m pip install -U pip>=9.0.1 flake8
      script:
        - flake8 glotaran
      after_success:
        # this prevents the tests to upload stuff to coveralls.io
        - echo "done"

    - python: 3.6
      # taken from https://quick-sphinx-tutorial.readthedocs.io/en/latest/advanced.html
      name: docs-creation
      before_install:
        - echo "before_install"
        - python -m pip install -r requirements_dev.txt
        - pip install -e .
      script:
        - make --directory=docs clean html
      after_success:
        # this prevents the tests to upload stuff to coveralls.io
        - echo "done"

    - python: 3.6
      # taken from https://quick-sphinx-tutorial.readthedocs.io/en/latest/advanced.html
      name: docs-linkcheck
      before_install:
        - echo "before_install"
        - python -m pip install -r requirements_dev.txt
        - pip install -e .
      script:
        - make --directory=docs clean linkcheck
      after_success:
        # this prevents the tests to upload stuff to coveralls.io
        - echo "done"

    # LINUX
    - python: "3.6"
      name: linux-py36

    - language: python
      sudo: required
      dist: xenial
      python: "3.7"
      name: linux-py37

    # OSX
    - language: generic
      python: 3.6
      os: osx
      name: osx-py36
      env:
        - DEPLOY_ALL=true
      before_install:
        - echo "before_install"
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda update conda -y
        - conda create -n py36 python=3.6 -y
        - source activate py36

    - language: generic
      python: 3.7
      name: osx-py37
      env:
        - DEPLOY_WHEELS=true
      os: osx
      before_install:
        - echo "before_install"
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - conda update conda -y
        - conda create -n py37 python=3.7 -y
        - source activate py37

  #    - python: 3.6
  #      env: win_coverage
  #      install:
  #        - pip install git+https://github.com/Robpol86/appveyor-artifacts.git coveralls
  #      script:
  #        - appveyor-artifacts -m download
  #      after_success:
  #        - coveralls
  #        - coverage erase

  allow_failures:
    #      this test is allowed to fail since it uses external resources
    - name: docs-linkcheck

install:
  - pip install coveralls
  - python -m pip install -U -r requirements_dev.txt

script:
  - pwd
  - pip install -e .
  - py.test --cov=glotaran --cov-config .coveragerc glotaran
  - pip freeze

after_success:
  - coveralls
  - coverage erase

deploy:
  - provider: pypi
    distributions: sdist bdist_wheel
    user: s-weigand
    password:
      secure: 1cciGQshgm8QV7Eo62ipZowGVm44ZvMtUWbKpkD+Dn09t8/V9wXfBmv6mmTu5P2bEZQWk+b39Y5phH8n7MTTbgZV/smjuy7nEmemDgiDW0Vx/KeqqC+8xOmbHT07yjvExn47LoBTPKE5dDUzXs3PDlo/BCV7J5+5qCIJfLDpLnMA/FU4waNYve+pjnxtKI5lsIwDo+ljv6sXj0nBmDLi3vNWlelL5fvtXiQwHACRieim36PwrZklcspqqQpIo7Vt4l0ojd+tQKN5XkKB1zmBLKX2EyOW+5iO9B1keKjDrIj9jiKOExxEPoKRB4mWl5BJ+F5p/veQyws78SoER4i7QxMlfoa1AP63Cvi1rlCDPhsphHfi5T6yfg5oC9LT+a+f8vf6BLTULFCPnXMBNiZJwXHBGxByAoTO0DRMUOq/UY2NwJ44rCMZCHiKHeeIScVFmRL6eG1hWImWolPgDkIlwE4Hfv9BNJNmONhaP8BRGjGnl7rsyNoiJwCVpGjkSFlb29Ae9AhLxrbTdlhjisNTIqEgmFAiZnaMwurOHs3RR4sdO9nb5BifBvvxySma5mW+pOER/vGuxOmowWRpfHtRt35DfqCw1EvaM8V5aUCEfQukJX3t+nepfMvK7W6Q0NqqryoNalSv7nO88Vm+4YKXrtztmY1MXOg6xdAkg7RLH04=

    skip_cleanup: true
    on:
      branch: master
      tags: true
      repo: glotaran/pyglotaran
      # there can only a maximum one test with DEPLOY_ALL=true, since PyPi will throw an error
      # and make the fail if the file (mostly sdist) already exists on the server
      condition: "$DEPLOY_ALL = true"

  # wheels deployment is needed for OsX
  - provider: pypi
    distributions: bdist_wheel
    user: s-weigand
    password:
      secure: 1cciGQshgm8QV7Eo62ipZowGVm44ZvMtUWbKpkD+Dn09t8/V9wXfBmv6mmTu5P2bEZQWk+b39Y5phH8n7MTTbgZV/smjuy7nEmemDgiDW0Vx/KeqqC+8xOmbHT07yjvExn47LoBTPKE5dDUzXs3PDlo/BCV7J5+5qCIJfLDpLnMA/FU4waNYve+pjnxtKI5lsIwDo+ljv6sXj0nBmDLi3vNWlelL5fvtXiQwHACRieim36PwrZklcspqqQpIo7Vt4l0ojd+tQKN5XkKB1zmBLKX2EyOW+5iO9B1keKjDrIj9jiKOExxEPoKRB4mWl5BJ+F5p/veQyws78SoER4i7QxMlfoa1AP63Cvi1rlCDPhsphHfi5T6yfg5oC9LT+a+f8vf6BLTULFCPnXMBNiZJwXHBGxByAoTO0DRMUOq/UY2NwJ44rCMZCHiKHeeIScVFmRL6eG1hWImWolPgDkIlwE4Hfv9BNJNmONhaP8BRGjGnl7rsyNoiJwCVpGjkSFlb29Ae9AhLxrbTdlhjisNTIqEgmFAiZnaMwurOHs3RR4sdO9nb5BifBvvxySma5mW+pOER/vGuxOmowWRpfHtRt35DfqCw1EvaM8V5aUCEfQukJX3t+nepfMvK7W6Q0NqqryoNalSv7nO88Vm+4YKXrtztmY1MXOg6xdAkg7RLH04=

    skip_cleanup: true
    on:
      branch: master
      tags: true
      repo: glotaran/pyglotaran
      # Wheels need to be generated for systems that might lack the compiler
      condition: "$DEPLOY_WHEELS = true"

notifications:
  slack:
    rooms:
      - secure: "pVrVDoJm9T5Zzz0GoxAY40RIVUccg8ObLmZJnHORnTEQddFg1AYgByd4nrBnpBmwOETg/bpDOvqXbwRuJWo3UJQjl0mxO3eH349ftjctxPTWp+601L6fCBgETArTayi3N//M2mmET2DEGCA9Oq4PFcoGGtUlLUcAGzrtuqM+sKxE/MMqk28EaV2vEjPifQJUKJ74huBXWvBjk1VhaSKdw71VrfF58VEsDACrIPgvbYdo6erkNj9F6CWD2vx/pm8uBcS4rGuTT98zfNnEx+Png85uZomsALhz8+jM8uCcpl6n6LJ+GI84OK7KNJdUAZTt7ylVxSpwPfsU/9KsFXFLPcMz7I8q/Z4HFFf+dBAv34DTnuLUKEmZ2cH8m56E0V0ky3PS9N59OOCXl8ys8GMqV65kbMeLfGzu8r0/06p2i4gTeO2YV9PzAGzeBmpFPlQtOAIV+VEa+1tJk5jxUTuHTMYCqp3aWObfbK7LVGilcfsBcrqjSV2S2yNCSUxSJ949/igUc6ZxMmSQ/wxOBWRSe3GEyxj3vZXvfjIV3y8Fjs3+CS47Vojx1/i6VjXAabJlDAbnNmm8oTSDJOT2fP1d9ukmxLOrmowc3fmX36fTpIBo1zpvODEiFYxa0UMioqj+8H7GC7Dw7KycRbWxP1Yxgx3VPR2wVbk0NA8wp37yfyo="
